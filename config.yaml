# Music API Proxy 配置文件 - 新架构版本
# 主配置文件，支持环境配置分离和热重载

# 应用配置
app:
  name: "music-api-proxy"
  version: "v2.1.0"
  mode: "production"  # 生产环境模式
  description: "高性能音乐API代理服务"
  debug: false

# 全局超时配置
timeouts:
  default: "30s"        # 默认超时时间
  short: "10s"          # 短超时（快速操作）
  long: "60s"           # 长超时（慢操作）
  connection: "90s"     # 连接超时

# 服务器配置
server:
  host: "0.0.0.0"
  port: 5678
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "60s"
  max_header_bytes: 1048576  # 1MB
  enable_flac: true
  enable_https: false
  cert_file: ""
  key_file: ""

# 日志配置 - 生产环境标准
logging:
  level: "info"       # 生产环境使用info级别
  format: "json"      # 生产环境使用结构化JSON格式
  output: "stdout"    # 输出到标准输出，便于容器化部署
  file: ""            # 日志文件路径（当output为file时）
  enable_caller: false # 生产环境关闭调用者信息以提高性能
  enable_stacktrace: false # 生产环境关闭堆栈跟踪以提高性能

# 音源配置
sources:
  # 默认音源列表
  default_sources: ["gdstudio", "unm_server"]
  enabled_sources: ["gdstudio", "unm_server"]
  test_sources: ["gdstudio"]
  retry_count: 3

  # UNM Server配置
  unm_server:
    enabled: true          #
    base_url: "https://api-unm.imixc.top"
    api_key: ""
    retry_count: 3
    user_agent: "Music-API-Proxy-HTTPClient/v2.1.0 (Linux; X86_64; go1.21)"

  # GDStudio API配置
  gdstudio:
    enabled: true
    base_url: "https://music-api.gdstudio.xyz/api.php"
    api_key: ""
    retry_count: 3
    user_agent: "Music-API-Proxy-HTTPClient/v2.1.0 (Linux; X86_64; go1.21)"

  # 音乐信息解析器配置
  music_info_resolver:
    enabled: true
    cache_ttl: "300s"  # 开发环境缓存时间较短
    
    # 搜索回退配置
    search_fallback:
      enabled: true
      keywords: ["hello", "love", "music", "song", "popular"]
      max_results: 20
      max_keywords: 3

# 缓存配置
cache:
  enabled: true
  type: "memory"  # memory, redis
  ttl: "5m"       # 开发环境缓存时间较短
  max_size: "10MB"
  cleanup_interval: "1m"

# 性能配置
performance:
  max_concurrent_requests: 100
  request_timeout: "30s"  # 使用全局默认超时时间
  rate_limit:
    enabled: false  # 开发环境禁用限流
    requests_per_minute: 100
    burst: 10

  # 连接池配置
  connection_pool:
    max_idle_conns: 50
    max_idle_conns_per_host: 5
    idle_conn_timeout: "60s"  # 使用全局长超时时间

# 安全配置 - 生产环境版本
security:
  # 基础认证配置
  enable_auth: false  # 禁用认证功能，避免使用示例密钥
  jwt_secret: ""      # 从环境变量获取
  api_key: ""         # 从环境变量获取

  # TLS/SSL配置
  tls_enabled: false
  tls_cert_file: ""
  tls_key_file: ""

  # API认证配置
  api_auth:
    enabled: false    # 禁用API认证，避免使用示例密钥
    api_key: ""       # 从环境变量获取
    admin_key: ""     # 从环境变量获取
    require_https: false
    enable_rate_limit: false
    rate_limit_per_min: 60
    enable_audit_log: false
    white_list: ["127.0.0.1", "::1"]
    allowed_user_agent: []

  # CORS配置
  cors:
    enabled: true
    allowed_origins: ["*"]  # 生产环境应该设置具体域名
    allowed_methods: ["GET", "POST", "PUT", "DELETE", "OPTIONS"]
    allowed_headers: ["*", "X-API-Key", "Authorization"]
    expose_headers: []
    allow_credentials: false
    max_age: "12h"

# 监控配置
monitoring:
  enabled: true
  metrics:
    enabled: true
    path: "/metrics"
    port: 9090
  
  health_check:
    enabled: true
    path: "/health"
    interval: "10s"
  
  profiling:
    enabled: true  # 开发环境启用性能分析
    path: "/debug/pprof"

# 插件配置
plugins:
  config_path: "./plugins"

  # 中间件插件
  middleware:
    - name: "cors"
      enabled: true
    - name: "logging"
      enabled: true
    - name: "recovery"
      enabled: true

# 路由配置
routes:
  api_prefix: "/api/v1"
  
  # API路由定义
  endpoints:
    search:
      path: "/search"
      methods: ["GET"]
      middleware: ["cors", "logging"]
      sources: ["gdstudio", "unm_server"]
    
    match:
      path: "/match"
      methods: ["GET"]
      middleware: ["cors", "logging"]
      sources: ["gdstudio", "unm_server"]
    
    ncmget:
      path: "/ncmget"
      methods: ["GET"]
      middleware: ["cors", "logging"]
      sources: ["gdstudio", "unm_server"]
    
    other:
      path: "/other"
      methods: ["GET"]
      middleware: ["cors", "logging"]
      sources: ["gdstudio", "unm_server"]
    
    picture:
      path: "/picture"
      methods: ["GET"]
      middleware: ["cors", "logging", "cache"]
      sources: ["gdstudio"]
    
    lyric:
      path: "/lyric"
      methods: ["GET"]
      middleware: ["cors", "logging", "cache"]
      sources: ["gdstudio"]

# HTTP客户端配置
http_client:
  max_idle_conns: 100
  max_idle_conns_per_host: 10
  expect_continue_timeout: "1s"
  disable_compression: false
  disable_keep_alives: false

# 中间件配置
middleware:
  logging:
    skip_paths: ["/health", "/metrics"]
    log_request_body: false
    log_response_body: false
    max_body_size: 1024

  metrics:
    skip_paths: ["/health", "/metrics"]
    record_body: false
    path_normalize: true
